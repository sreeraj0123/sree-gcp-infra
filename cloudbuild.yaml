steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
        echo "***********************"
        echo "${_BRANCH_NAME}"
        echo "***********************"

- id: 'tf init'
  name: 'hashicorp/terraform:1.9.0'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
        if [ -d "environments/${_BRANCH_NAME}/" ]; then
          cd environments/${_BRANCH_NAME}
          terraform init
        else
          for dir in environments/*/
          do 
            cd "${dir}" 
            env=${dir%*/}
            env=${env#*/}
            echo ""
            echo "*************** TERRAFORM INIT ******************"
            echo "******* At environment: ${env} ********"
            echo "*************************************************"
            terraform init || exit 1
            cd -
          done
        fi 

- id: 'tf plan'
  name: 'hashicorp/terraform:1.9.0'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
        if [ -d "environments/${_BRANCH_NAME}/" ]; then
          cd environments/${_BRANCH_NAME}
          echo "Using project ID: ${_PROJECT_ID}"
          terraform plan \
            -var="project_id=${_PROJECT_ID}" \
            -var="region=${_REGION}"
        else
          for dir in environments/*/
          do  
            cd "${dir}" 
            env=${dir%*/}
            env=${env#*/}
            echo ""
            echo "*************** TERRAFORM PLAN ******************"
            echo "******* At environment: ${env} ********"
            echo "*************************************************"
            echo "Using project ID: ${_PROJECT_ID}"
            terraform plan \
              -var="project_id=${_PROJECT_ID}" \
              -var="region=${_REGION}" || exit 1
            cd -
          done
        fi

- id: 'tf apply'
  name: 'hashicorp/terraform:1.9.0'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
        if [ -d "environments/${_BRANCH_NAME}/" ]; then
          cd environments/${_BRANCH_NAME} 
          echo "Using project ID: ${_PROJECT_ID}"     
          terraform apply \
            -var="project_id=${_PROJECT_ID}" \
            -var="region=${_REGION}" -auto-approve
        else
          echo "***************************** SKIPPING APPLYING *******************************"
          echo "Branch '${_BRANCH_NAME}' does not represent an official environment."
          echo "*******************************************************************************"
        fi

logsBucket: "gs://${_LOG_BUCKET}"

substitutions:
  _BRANCH_NAME: "main"
  _REGION: "us-central1"
  #_LOG_BUCKET: "spn-run-app-logs"

options:
  env:
    - PROJECT_ID=${_PROJECT_ID}
    - PROJECT_NUMBER=${_PROJECT_NUMBER}
    - LOG_BUCKET=${_LOG_BUCKET}
    
    
